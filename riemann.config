; -*- mode: clojure; -*-
; vi: filetype=clojure

(logging/init {:file "riemann.log"})

(let [host "127.0.0.1"]
  (tcp-server {:host host})
  (udp-server {:host host}))

(instrumentation {:enabled? false})

(periodically-expire 10)

(defn int-cores [es]
  (map
    (fn [e] (update e :cores (fn [v] (Integer/parseInt v)))) es))

(defn high-cpu-load [{:keys [cores metric]}]
  (< (* 10 cores) metric))

(let [index (index)]
  (streams
    (default :ttl 60
      index
      (where (and (tagged "success") (not (expired? event)))
         (where (service "cpu/idle")
           (by :host
             (fixed-event-window 10
                (smap folds/mean
                   (where (<= 0 metric 10) prn)))))

           (where (service "load/cores")
              (by :host
                 (fixed-event-window 5
                   (smap int-cores
                      (smap folds/mean
                        (where* high-cpu-load prn))))))))))
